[{"/home/max/Projects/portfolio/pages/[page].tsx":"1","/home/max/Projects/portfolio/pages/_app.tsx":"2","/home/max/Projects/portfolio/pages/api/hello.ts":"3","/home/max/Projects/portfolio/pages/index.tsx":"4","/home/max/Projects/portfolio/components/AboutPage/AboutPage.tsx":"5","/home/max/Projects/portfolio/components/Animated/Animated.tsx":"6","/home/max/Projects/portfolio/components/Avatar/Avatar.tsx":"7","/home/max/Projects/portfolio/components/Button/Button.tsx":"8","/home/max/Projects/portfolio/components/ContactsPage/ContactsPage.tsx":"9","/home/max/Projects/portfolio/components/FloatingCard/FloatingCard.tsx":"10","/home/max/Projects/portfolio/components/Layout/Layout.tsx":"11","/home/max/Projects/portfolio/components/MainCard/MainCard.tsx":"12","/home/max/Projects/portfolio/components/Navigation/Navigation.tsx":"13","/home/max/Projects/portfolio/components/ProjectsPage/ProjectCard/ProjectCard.tsx":"14","/home/max/Projects/portfolio/components/ProjectsPage/ProjectsPage.tsx":"15","/home/max/Projects/portfolio/components/SkillsPage/PercentageWheel/PercentageWheel.tsx":"16","/home/max/Projects/portfolio/components/SkillsPage/SkillCard/SkillCard.tsx":"17","/home/max/Projects/portfolio/components/SkillsPage/SkillsPage.tsx":"18"},{"size":1632,"mtime":1653585614840,"results":"19","hashOfConfig":"20"},{"size":900,"mtime":1653496291024,"results":"21","hashOfConfig":"20"},{"size":307,"mtime":1653123419228,"results":"22","hashOfConfig":"20"},{"size":293,"mtime":1653734501247,"results":"23","hashOfConfig":"20"},{"size":1321,"mtime":1653585614804,"results":"24","hashOfConfig":"20"},{"size":494,"mtime":1653167313321,"results":"25","hashOfConfig":"20"},{"size":336,"mtime":1653585614808,"results":"26","hashOfConfig":"20"},{"size":507,"mtime":1653461786336,"results":"27","hashOfConfig":"20"},{"size":2011,"mtime":1653585614816,"results":"28","hashOfConfig":"20"},{"size":3410,"mtime":1653734298719,"results":"29","hashOfConfig":"20"},{"size":523,"mtime":1653734501243,"results":"30","hashOfConfig":"20"},{"size":377,"mtime":1653466634907,"results":"31","hashOfConfig":"20"},{"size":1602,"mtime":1653734501247,"results":"32","hashOfConfig":"20"},{"size":1390,"mtime":1653585614824,"results":"33","hashOfConfig":"20"},{"size":2181,"mtime":1653734501247,"results":"34","hashOfConfig":"20"},{"size":1333,"mtime":1653585614828,"results":"35","hashOfConfig":"20"},{"size":1040,"mtime":1653585614832,"results":"36","hashOfConfig":"20"},{"size":5901,"mtime":1653734501247,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"1qvdzx",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/max/Projects/portfolio/pages/[page].tsx",["99"],[],"import {useRouter} from 'next/router'\nimport AboutPage from 'components/AboutPage/AboutPage'\nimport React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {isPage, setPage, setPhase} from 'redux/app/appSlice'\nimport {RootState} from 'redux/store'\nimport SkillsPage from 'components/SkillsPage/SkillsPage'\nimport ProjectsPage from 'components/ProjectsPage/ProjectsPage'\nimport ContactsPage from 'components/ContactsPage/ContactsPage'\n\nconst Page = () => {\n    const {page} = useRouter().query\n    const currentPage = useSelector((state: RootState) => state.app.page)\n    const currentPhase = useSelector((state:RootState) => state.app.phase)\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        if (isPage(page)) {\n\n            if (currentPhase === 'mounted') dispatch(setPhase('unmounting'))\n\n            const t2 = setTimeout(() => {\n                dispatch(setPage(page))\n                dispatch(setPhase('mounting'))\n            },1000)\n\n            const t3 = setTimeout(() => {\n                dispatch(setPhase('mounted'))\n            }, 2000)\n\n            return () => {\n                clearTimeout(t2)\n                clearTimeout(t3)\n            }\n\n        }\n    },[page, dispatch])\n\n    if (currentPage === 'about') return <AboutPage phase={currentPhase}/>\n    if (currentPage === 'skills') return <SkillsPage phase={currentPhase}/>\n    if (currentPage === 'projects') return <ProjectsPage phase={currentPhase}/>\n    if (currentPage === 'contacts') return <ContactsPage phase={currentPhase}/>\n    return <div>{currentPage} - {currentPhase}</div>\n}\n\nexport default Page\n","/home/max/Projects/portfolio/pages/_app.tsx",[],[],"/home/max/Projects/portfolio/pages/api/hello.ts",[],[],"/home/max/Projects/portfolio/pages/index.tsx",[],[],"/home/max/Projects/portfolio/components/AboutPage/AboutPage.tsx",[],[],"/home/max/Projects/portfolio/components/Animated/Animated.tsx",[],[],"/home/max/Projects/portfolio/components/Avatar/Avatar.tsx",["100"],[],"import React from 'react'\nimport image from 'public/avatar.png'\nimport styles from 'components/Avatar/Avatar.module.scss'\nimport Image from 'next/image'\n\nconst Avatar = () => {\nreturn (\n    <div className={styles.wrapper}>\n        <img src={'/avatar.png'} width={220} height={220} alt={'avatar'}/>\n    </div>\n)\n}\n\nexport default Avatar\n","/home/max/Projects/portfolio/components/Button/Button.tsx",[],[],"/home/max/Projects/portfolio/components/ContactsPage/ContactsPage.tsx",["101","102","103","104","105"],[],"import styles from './ContactsPage.module.scss'\nimport {PagePhases} from 'redux/app/appSlice'\nimport React from 'react'\nimport Image from 'next/image'\nimport Animated from 'components/Animated/Animated'\n\nconst ContactsPage: React.FC<{ phase: PagePhases }> = ({phase}) => {\n    return (\n        <ul className={styles.list}>\n            <Animated phase={phase}>\n                <li className={styles.item} >\n                    <a href={'mailto:max.georgievsky@gmail.com'} className={styles.link}><img\n                        src={'/logo-email.png'} width={50} height={50} alt={'e-mail'}/></a>\n                </li>\n            </Animated>\n            <Animated phase={phase} delay={100}>\n                <li className={styles.item}>\n                    <a href={'https://t.me/maxgeorgievsky'} className={styles.link}><img\n                        src={'/logo-telegram.png'} width={50} height={50} alt={'telegram'}/></a>\n                </li>\n            </Animated>\n            <Animated phase={phase} delay={200}>\n                <li className={styles.item}>\n                    <a href={'https://vk.com/maximgreen'} className={styles.link}><img\n                        src={'/logo-vk.png'} width={50} height={50} alt={'vkontakte'}/></a>\n                </li>\n            </Animated>\n            <Animated phase={phase} delay={300}>\n                <li className={styles.item}>\n                    <a href={'https://github.com/maxim-green'} className={styles.link}><img\n                        src={'/logo-github.png'} width={50} height={50} alt={'github'}/></a>\n                </li>\n            </Animated>\n            <Animated phase={phase} delay={400}>\n                <li className={styles.item}>\n                    <a href={'https://www.linkedin.com/in/max-georgievsky-429a0b239/'} className={styles.link}><img\n                        src={'/logo-linkedin.png'} width={50} height={50} alt={'linkedin'}/></a>\n                </li>\n            </Animated>\n        </ul>\n    )\n}\n\nexport default ContactsPage","/home/max/Projects/portfolio/components/FloatingCard/FloatingCard.tsx",["106"],[],"import React, {useEffect, useRef, useState} from 'react'\nimport styles from './FloatingCard.module.scss'\n\nconst FloatingCard: React.FC<{\n    children?: Array<React.ReactElement | string> | React.ReactElement | string,\n    maxRotateX?: number,\n    maxRotateY?: number\n}> = ({\n          children,\n    maxRotateX= 10,\n    maxRotateY = 10\n      }) => {\n    const [wrapperTransform, setWrapperTransform] = useState('')\n    const [mouseIn, setMouseIn] = useState(false)\n    const [visibleChildIndex, setVisibleChildIndex] = useState(0)\n    const [isTurning, setIsTurning] = useState(false)\n    const wrapper = useRef<HTMLDivElement>(null)\n    const childrenLength = React.Children.count(children)\n    const clickable = childrenLength > 1\n\n    const mouseMoveHandler = (event: React.MouseEvent) => {\n        // Get mouse position\n        if (wrapper.current) {\n            const fcRect = wrapper.current.getBoundingClientRect()\n\n            const fcHalfHeight = Math.round(fcRect.height / 2)\n            const fcHalfWidth = Math.round(fcRect.width / 2)\n\n            const fcOffset = {\n                top: fcRect.top + document.body.scrollTop,\n                left: fcRect.left + document.body.scrollLeft\n            }\n\n            const mouseX = (event.pageX - fcOffset.left) | 0\n            const mouseY = (event.pageY - fcOffset.top) | 0\n\n            const diffX = -1 * (fcHalfWidth - mouseX)\n            const diffY = fcHalfHeight - mouseY\n            const rotateX = diffY / fcHalfHeight * maxRotateX\n            const rotateY = diffX / fcHalfWidth * maxRotateY\n\n            // Move the floating card\n            setWrapperTransform('rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)')\n        }\n    }\n\n    const mouseEnterHandler = (event: React.MouseEvent) => {\n        setMouseIn(true)\n    }\n\n    const mouseLeaveHandler = (event: React.MouseEvent) => {\n        setWrapperTransform('rotateX(0deg) rotateY(0deg)')\n        setMouseIn(false)\n    }\n\n    let timeout: ReturnType<typeof setTimeout>;\n    const clickHandler = () => {\n        setIsTurning(true)\n        timeout = setTimeout(() => {\n            setVisibleChildIndex((prev) => (prev < childrenLength - 1) ? prev + 1 : 0)\n            setIsTurning(false)\n        }, 200)\n    }\n\n    useEffect(() => {\n        return () => clearTimeout(timeout)\n    }, [])\n\n    return (\n        <div className={styles.wrapper}>\n            <div\n                className={`${styles.inner} ${isTurning ? styles.turning : ''}`}\n                ref={wrapper}\n                style={{\n                    transform: wrapperTransform,\n                    transition: !mouseIn ? '.2s cubic-bezier(0.5,0.1,0.1,3)' : undefined,\n                }}\n                onClick={clickable ? clickHandler : undefined}\n                onMouseMove={mouseMoveHandler}\n                onMouseEnter={mouseEnterHandler}\n                onMouseLeave={mouseLeaveHandler}\n            >\n                <div className={styles.border}>\n                    {React.Children.map(children, (child, index) => {\n                        return <div\n                            className={`${styles.content} ${index === visibleChildIndex ? styles.visible : ''}` }\n                            style={{pointerEvents: clickable ? 'auto' : 'none'}}\n                        >{child}</div>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FloatingCard\n","/home/max/Projects/portfolio/components/Layout/Layout.tsx",[],[],"/home/max/Projects/portfolio/components/MainCard/MainCard.tsx",[],[],"/home/max/Projects/portfolio/components/Navigation/Navigation.tsx",["107","108"],[],"import styles from 'components/Navigation/Navigation.module.scss'\nimport Link from 'next/link'\nimport React, {useEffect, useState} from 'react'\nimport {useRouter} from 'next/router'\nimport {useDispatch} from 'react-redux'\n\nconst Navigation = () => {\n    const [menuOpened, setMenuOpened] = useState(false)\n    const {page} = useRouter().query\n\n    const menuClickHandler = () => {\n        setMenuOpened(prev => !prev)\n    }\n\n    useEffect(() => {\n        setMenuOpened(false)\n    }, [page])\n\n    return (<div className={styles.wrapper}>\n            <button className={styles.menuButton} onClick={menuClickHandler}>\n                {menuOpened ? <img src=\"/x-lg.svg\" alt=\"list\"/> : <img src=\"/list.svg\" alt=\"list\"/> }\n            </button>\n            <nav className={`${styles.list} ${menuOpened ? styles.listActive : ''}`}>\n                <div className={`${styles.item} ${(page === 'about') ? styles.active : ''}`}>\n                    <Link href={'about'}>About me</Link>\n                </div>\n                <div className={`${styles.item} ${(page === 'skills') ? styles.active : ''}`}>\n                    <Link href={'skills'}>Skills</Link>\n                </div>\n                <div className={`${styles.item} ${(page === 'projects') ? styles.active : ''}`}>\n                    <Link href={'projects'}>Projects</Link>\n                </div>\n                <div className={`${styles.item} ${(page === 'contacts') ? styles.active : ''}`}>\n                    <Link href={'contacts'}>Contacts</Link>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Navigation\n","/home/max/Projects/portfolio/components/ProjectsPage/ProjectCard/ProjectCard.tsx",["109"],[],"import FloatingCard from 'components/FloatingCard/FloatingCard'\nimport styles from './ProjectCard.module.scss'\nimport Image, {StaticImageData} from 'next/image'\nimport Button from 'components/Button/Button'\nimport React from 'react'\nimport Link from 'next/link'\n\nconst ProjectCard: React.FC<{\n    image: string\n    title: string\n    usedTechnologies: string[]\n    websiteUrl: string\n    githubUrl: string\n}> = ({image, title, usedTechnologies, websiteUrl, githubUrl}) => {\n    return (\n        <FloatingCard maxRotateX={2} maxRotateY={2}>\n            <div className={styles.content}>\n                <div className={styles.image}>\n                    <img src={image} width={280} height={190} alt={'project image'}/>\n                </div>\n                <div className={styles.title}>\n                    {title}\n                </div>\n                <div className={styles.description}>\n                    <ul>\n                        {usedTechnologies.map((tech, index) => <li key={index}>{tech}</li>)}\n                    </ul>\n                </div>\n                <div className={styles.links}>\n                    <Link href={websiteUrl}><a><Button width={180}>Visit website</Button></a></Link>\n                    <a href={githubUrl} className={styles.link}>View on GitHub</a>\n                </div>\n            </div>\n        </FloatingCard>\n    )\n}\n\nexport default ProjectCard","/home/max/Projects/portfolio/components/ProjectsPage/ProjectsPage.tsx",[],[],"/home/max/Projects/portfolio/components/SkillsPage/PercentageWheel/PercentageWheel.tsx",[],[],"/home/max/Projects/portfolio/components/SkillsPage/SkillCard/SkillCard.tsx",["110"],[],"import styles from './SkillCard.module.scss'\nimport FloatingCard from 'components/FloatingCard/FloatingCard'\nimport React from 'react'\nimport Image from 'next/image'\nimport PercentageWheel from '../PercentageWheel/PercentageWheel'\n\nconst SkillCard: React.FC<{\n    image: string,\n    title: string,\n    percentage: number,\n    children: React.ReactElement | string\n}> = ({\n    image,\n    title,\n    percentage,\n    children\n                       }) => {\n    return <FloatingCard>\n        <div className={styles.content}>\n            <div className={styles.image}>\n                <img src={image} alt=\"\" height={50} width={70}/>\n            </div>\n            <div className={styles.title}>{title}</div>\n            <div className={styles.description}><PercentageWheel percentage={percentage}/></div>\n        </div>\n        <div className={styles.content}>\n            <div className={styles.title}>I know</div>\n            <div className={styles.description}>{children}</div>\n        </div>\n    </FloatingCard>\n}\n\nexport default SkillCard\n","/home/max/Projects/portfolio/components/SkillsPage/SkillsPage.tsx",[],[],{"ruleId":"111","severity":1,"message":"112","line":37,"column":7,"nodeType":"113","endLine":37,"endColumn":23,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":9,"column":9,"nodeType":"117","endLine":9,"endColumn":75},{"ruleId":"115","severity":1,"message":"116","line":12,"column":90,"nodeType":"117","endLine":13,"endColumn":88},{"ruleId":"115","severity":1,"message":"116","line":18,"column":85,"nodeType":"117","endLine":19,"endColumn":93},{"ruleId":"115","severity":1,"message":"116","line":24,"column":83,"nodeType":"117","endLine":25,"endColumn":88},{"ruleId":"115","severity":1,"message":"116","line":30,"column":88,"nodeType":"117","endLine":31,"endColumn":89},{"ruleId":"115","severity":1,"message":"116","line":36,"column":112,"nodeType":"117","endLine":37,"endColumn":93},{"ruleId":"111","severity":1,"message":"118","line":67,"column":8,"nodeType":"113","endLine":67,"endColumn":10,"suggestions":"119"},{"ruleId":"115","severity":1,"message":"116","line":21,"column":31,"nodeType":"117","endLine":21,"endColumn":64},{"ruleId":"115","severity":1,"message":"116","line":21,"column":67,"nodeType":"117","endLine":21,"endColumn":100},{"ruleId":"115","severity":1,"message":"116","line":19,"column":21,"nodeType":"117","endLine":19,"endColumn":86},{"ruleId":"115","severity":1,"message":"116","line":21,"column":17,"nodeType":"117","endLine":21,"endColumn":65},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentPhase'. Either include it or remove the dependency array.","ArrayExpression",["120"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has a missing dependency: 'timeout'. Either include it or remove the dependency array.",["121"],{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [page, dispatch, currentPhase]",{"range":"126","text":"127"},"Update the dependencies array to be: [timeout]",{"range":"128","text":"129"},[1227,1243],"[page, dispatch, currentPhase]",[2312,2314],"[timeout]"]